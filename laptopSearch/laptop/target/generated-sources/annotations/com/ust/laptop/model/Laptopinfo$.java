package com.ust.laptop.model;

import com.speedment.jpastreamer.field.ComparableField;
import com.speedment.jpastreamer.field.DoubleField;
import com.speedment.jpastreamer.field.IntField;
import com.speedment.jpastreamer.field.StringField;

import java.util.Date;
import java.util.UUID;

/**
 * The generated base for entity {@link Laptopinfo} representing entities of the
 * {@code laptopinfo}-table in the database.
 * <p> This file has been automatically generated by JPAStreamer.
 * 
 * @author JPAStreamer
 */
public final class Laptopinfo$ {
    
    /**
     * This Field corresponds to the {@link Laptopinfo} field "brand".
     */
    public static final StringField<Laptopinfo> brand = StringField.create(
        Laptopinfo.class,
        "brand",
        Laptopinfo::getBrand,
        false
    );
    /**
     * This Field corresponds to the {@link Laptopinfo} field "createDate".
     */
    public static final ComparableField<Laptopinfo, Date> createDate = ComparableField.create(
        Laptopinfo.class,
        "createDate",
        Laptopinfo::getCreateDate,
        false
    );
    /**
     * This Field corresponds to the {@link Laptopinfo} field "price".
     */
    public static final DoubleField<Laptopinfo> price = DoubleField.create(
        Laptopinfo.class,
        "price",
        Laptopinfo::getPrice,
        false
    );
    /**
     * This Field corresponds to the {@link Laptopinfo} field "id".
     */
    public static final ComparableField<Laptopinfo, UUID> id = ComparableField.create(
        Laptopinfo.class,
        "id",
        Laptopinfo::getId,
        false
    );
    /**
     * This Field corresponds to the {@link Laptopinfo} field "storage".
     */
    public static final IntField<Laptopinfo> storage = IntField.create(
        Laptopinfo.class,
        "storage",
        Laptopinfo::getStorage,
        false
    );
    /**
     * This Field corresponds to the {@link Laptopinfo} field "processor".
     */
    public static final StringField<Laptopinfo> processor = StringField.create(
        Laptopinfo.class,
        "processor",
        Laptopinfo::getProcessor,
        false
    );
}